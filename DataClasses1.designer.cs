#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BuildingInspection
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database1")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCoordinate(Coordinate instance);
    partial void UpdateCoordinate(Coordinate instance);
    partial void DeleteCoordinate(Coordinate instance);
    partial void InsertWeather(Weather instance);
    partial void UpdateWeather(Weather instance);
    partial void DeleteWeather(Weather instance);
    partial void InsertDroneInfo(DroneInfo instance);
    partial void UpdateDroneInfo(DroneInfo instance);
    partial void DeleteDroneInfo(DroneInfo instance);
    partial void InsertFlightInfo(FlightInfo instance);
    partial void UpdateFlightInfo(FlightInfo instance);
    partial void DeleteFlightInfo(FlightInfo instance);
    partial void InsertFlightSchedule(FlightSchedule instance);
    partial void UpdateFlightSchedule(FlightSchedule instance);
    partial void DeleteFlightSchedule(FlightSchedule instance);
    partial void InsertInspectionResult(InspectionResult instance);
    partial void UpdateInspectionResult(InspectionResult instance);
    partial void DeleteInspectionResult(InspectionResult instance);
    partial void InsertReport(Report instance);
    partial void UpdateReport(Report instance);
    partial void DeleteReport(Report instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Coordinate> Coordinates
		{
			get
			{
				return this.GetTable<Coordinate>();
			}
		}
		
		public System.Data.Linq.Table<Weather> Weathers
		{
			get
			{
				return this.GetTable<Weather>();
			}
		}
		
		public System.Data.Linq.Table<DroneInfo> DroneInfos
		{
			get
			{
				return this.GetTable<DroneInfo>();
			}
		}
		
		public System.Data.Linq.Table<FlightInfo> FlightInfos
		{
			get
			{
				return this.GetTable<FlightInfo>();
			}
		}
		
		public System.Data.Linq.Table<FlightSchedule> FlightSchedules
		{
			get
			{
				return this.GetTable<FlightSchedule>();
			}
		}
		
		public System.Data.Linq.Table<InspectionResult> InspectionResults
		{
			get
			{
				return this.GetTable<InspectionResult>();
			}
		}
		
		public System.Data.Linq.Table<Report> Reports
		{
			get
			{
				return this.GetTable<Report>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Coordinate")]
	public partial class Coordinate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _coordinatesID;
		
		private string _latitude;
		
		private string _longitude;
		
		private EntitySet<FlightInfo> _FlightInfos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncoordinatesIDChanging(int value);
    partial void OncoordinatesIDChanged();
    partial void OnlatitudeChanging(string value);
    partial void OnlatitudeChanged();
    partial void OnlongitudeChanging(string value);
    partial void OnlongitudeChanged();
    #endregion
		
		public Coordinate()
		{
			this._FlightInfos = new EntitySet<FlightInfo>(new Action<FlightInfo>(this.attach_FlightInfos), new Action<FlightInfo>(this.detach_FlightInfos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coordinatesID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int coordinatesID
		{
			get
			{
				return this._coordinatesID;
			}
			set
			{
				if ((this._coordinatesID != value))
				{
					this.OncoordinatesIDChanging(value);
					this.SendPropertyChanging();
					this._coordinatesID = value;
					this.SendPropertyChanged("coordinatesID");
					this.OncoordinatesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_latitude", DbType="VarChar(50)")]
		public string latitude
		{
			get
			{
				return this._latitude;
			}
			set
			{
				if ((this._latitude != value))
				{
					this.OnlatitudeChanging(value);
					this.SendPropertyChanging();
					this._latitude = value;
					this.SendPropertyChanged("latitude");
					this.OnlatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_longitude", DbType="VarChar(50)")]
		public string longitude
		{
			get
			{
				return this._longitude;
			}
			set
			{
				if ((this._longitude != value))
				{
					this.OnlongitudeChanging(value);
					this.SendPropertyChanging();
					this._longitude = value;
					this.SendPropertyChanged("longitude");
					this.OnlongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Coordinate_FlightInfo", Storage="_FlightInfos", ThisKey="coordinatesID", OtherKey="coordinatesID")]
		public EntitySet<FlightInfo> FlightInfos
		{
			get
			{
				return this._FlightInfos;
			}
			set
			{
				this._FlightInfos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FlightInfos(FlightInfo entity)
		{
			this.SendPropertyChanging();
			entity.Coordinate = this;
		}
		
		private void detach_FlightInfos(FlightInfo entity)
		{
			this.SendPropertyChanging();
			entity.Coordinate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Weather")]
	public partial class Weather : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _weatherID;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<System.DateTime> _time;
		
		private string _weather1;
		
		private EntitySet<FlightSchedule> _FlightSchedules;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnweatherIDChanging(int value);
    partial void OnweatherIDChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OntimeChanging(System.Nullable<System.DateTime> value);
    partial void OntimeChanged();
    partial void Onweather1Changing(string value);
    partial void Onweather1Changed();
    #endregion
		
		public Weather()
		{
			this._FlightSchedules = new EntitySet<FlightSchedule>(new Action<FlightSchedule>(this.attach_FlightSchedules), new Action<FlightSchedule>(this.detach_FlightSchedules));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weatherID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int weatherID
		{
			get
			{
				return this._weatherID;
			}
			set
			{
				if ((this._weatherID != value))
				{
					this.OnweatherIDChanging(value);
					this.SendPropertyChanging();
					this._weatherID = value;
					this.SendPropertyChanged("weatherID");
					this.OnweatherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="weather", Storage="_weather1", DbType="VarChar(50)")]
		public string weather1
		{
			get
			{
				return this._weather1;
			}
			set
			{
				if ((this._weather1 != value))
				{
					this.Onweather1Changing(value);
					this.SendPropertyChanging();
					this._weather1 = value;
					this.SendPropertyChanged("weather1");
					this.Onweather1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Weather_FlightSchedule", Storage="_FlightSchedules", ThisKey="weatherID", OtherKey="weatherID")]
		public EntitySet<FlightSchedule> FlightSchedules
		{
			get
			{
				return this._FlightSchedules;
			}
			set
			{
				this._FlightSchedules.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FlightSchedules(FlightSchedule entity)
		{
			this.SendPropertyChanging();
			entity.Weather = this;
		}
		
		private void detach_FlightSchedules(FlightSchedule entity)
		{
			this.SendPropertyChanging();
			entity.Weather = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DroneInfo")]
	public partial class DroneInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _droneID;
		
		private string _droneName;
		
		private string _latitude;
		
		private string _longitude;
		
		private System.Nullable<int> _battery;
		
		private EntitySet<FlightSchedule> _FlightSchedules;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndroneIDChanging(int value);
    partial void OndroneIDChanged();
    partial void OndroneNameChanging(string value);
    partial void OndroneNameChanged();
    partial void OnlatitudeChanging(string value);
    partial void OnlatitudeChanged();
    partial void OnlongitudeChanging(string value);
    partial void OnlongitudeChanged();
    partial void OnbatteryChanging(System.Nullable<int> value);
    partial void OnbatteryChanged();
    #endregion
		
		public DroneInfo()
		{
			this._FlightSchedules = new EntitySet<FlightSchedule>(new Action<FlightSchedule>(this.attach_FlightSchedules), new Action<FlightSchedule>(this.detach_FlightSchedules));
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_droneID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int droneID
		{
			get
			{
				return this._droneID;
			}
			set
			{
				if ((this._droneID != value))
				{
					this.OndroneIDChanging(value);
					this.SendPropertyChanging();
					this._droneID = value;
					this.SendPropertyChanged("droneID");
					this.OndroneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_droneName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string droneName
		{
			get
			{
				return this._droneName;
			}
			set
			{
				if ((this._droneName != value))
				{
					this.OndroneNameChanging(value);
					this.SendPropertyChanging();
					this._droneName = value;
					this.SendPropertyChanged("droneName");
					this.OndroneNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_latitude", DbType="VarChar(50)")]
		public string latitude
		{
			get
			{
				return this._latitude;
			}
			set
			{
				if ((this._latitude != value))
				{
					this.OnlatitudeChanging(value);
					this.SendPropertyChanging();
					this._latitude = value;
					this.SendPropertyChanged("latitude");
					this.OnlatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_longitude", DbType="VarChar(50)")]
		public string longitude
		{
			get
			{
				return this._longitude;
			}
			set
			{
				if ((this._longitude != value))
				{
					this.OnlongitudeChanging(value);
					this.SendPropertyChanging();
					this._longitude = value;
					this.SendPropertyChanged("longitude");
					this.OnlongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_battery", DbType="Int")]
		public System.Nullable<int> battery
		{
			get
			{
				return this._battery;
			}
			set
			{
				if ((this._battery != value))
				{
					this.OnbatteryChanging(value);
					this.SendPropertyChanging();
					this._battery = value;
					this.SendPropertyChanged("battery");
					this.OnbatteryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DroneInfo_FlightSchedule", Storage="_FlightSchedules", ThisKey="droneID", OtherKey="droneID")]
		public EntitySet<FlightSchedule> FlightSchedules
		{
			get
			{
				return this._FlightSchedules;
			}
			set
			{
				this._FlightSchedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DroneInfo_User", Storage="_Users", ThisKey="droneID", OtherKey="droneID")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FlightSchedules(FlightSchedule entity)
		{
			this.SendPropertyChanging();
			entity.DroneInfo = this;
		}
		
		private void detach_FlightSchedules(FlightSchedule entity)
		{
			this.SendPropertyChanging();
			entity.DroneInfo = null;
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.DroneInfo = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.DroneInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FlightInfo")]
	public partial class FlightInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _flightInfoID;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<System.DateTime> _time;
		
		private System.Nullable<int> _coordinatesID;
		
		private EntityRef<FlightInfo> _FlightInfo2;
		
		private EntitySet<FlightSchedule> _FlightSchedules;
		
		private EntityRef<Coordinate> _Coordinate;
		
		private EntityRef<FlightInfo> _FlightInfo1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnflightInfoIDChanging(int value);
    partial void OnflightInfoIDChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OntimeChanging(System.Nullable<System.DateTime> value);
    partial void OntimeChanged();
    partial void OncoordinatesIDChanging(System.Nullable<int> value);
    partial void OncoordinatesIDChanged();
    #endregion
		
		public FlightInfo()
		{
			this._FlightInfo2 = default(EntityRef<FlightInfo>);
			this._FlightSchedules = new EntitySet<FlightSchedule>(new Action<FlightSchedule>(this.attach_FlightSchedules), new Action<FlightSchedule>(this.detach_FlightSchedules));
			this._Coordinate = default(EntityRef<Coordinate>);
			this._FlightInfo1 = default(EntityRef<FlightInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flightInfoID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int flightInfoID
		{
			get
			{
				return this._flightInfoID;
			}
			set
			{
				if ((this._flightInfoID != value))
				{
					if (this._FlightInfo1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnflightInfoIDChanging(value);
					this.SendPropertyChanging();
					this._flightInfoID = value;
					this.SendPropertyChanged("flightInfoID");
					this.OnflightInfoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coordinatesID", DbType="Int")]
		public System.Nullable<int> coordinatesID
		{
			get
			{
				return this._coordinatesID;
			}
			set
			{
				if ((this._coordinatesID != value))
				{
					if (this._Coordinate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncoordinatesIDChanging(value);
					this.SendPropertyChanging();
					this._coordinatesID = value;
					this.SendPropertyChanged("coordinatesID");
					this.OncoordinatesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FlightInfo_FlightInfo", Storage="_FlightInfo2", ThisKey="flightInfoID", OtherKey="flightInfoID", IsUnique=true, IsForeignKey=false)]
		public FlightInfo FlightInfo2
		{
			get
			{
				return this._FlightInfo2.Entity;
			}
			set
			{
				FlightInfo previousValue = this._FlightInfo2.Entity;
				if (((previousValue != value) 
							|| (this._FlightInfo2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FlightInfo2.Entity = null;
						previousValue.FlightInfo1 = null;
					}
					this._FlightInfo2.Entity = value;
					if ((value != null))
					{
						value.FlightInfo1 = this;
					}
					this.SendPropertyChanged("FlightInfo2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FlightInfo_FlightSchedule", Storage="_FlightSchedules", ThisKey="flightInfoID", OtherKey="flightInfoID")]
		public EntitySet<FlightSchedule> FlightSchedules
		{
			get
			{
				return this._FlightSchedules;
			}
			set
			{
				this._FlightSchedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Coordinate_FlightInfo", Storage="_Coordinate", ThisKey="coordinatesID", OtherKey="coordinatesID", IsForeignKey=true)]
		public Coordinate Coordinate
		{
			get
			{
				return this._Coordinate.Entity;
			}
			set
			{
				Coordinate previousValue = this._Coordinate.Entity;
				if (((previousValue != value) 
							|| (this._Coordinate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Coordinate.Entity = null;
						previousValue.FlightInfos.Remove(this);
					}
					this._Coordinate.Entity = value;
					if ((value != null))
					{
						value.FlightInfos.Add(this);
						this._coordinatesID = value.coordinatesID;
					}
					else
					{
						this._coordinatesID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Coordinate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FlightInfo_FlightInfo", Storage="_FlightInfo1", ThisKey="flightInfoID", OtherKey="flightInfoID", IsForeignKey=true)]
		public FlightInfo FlightInfo1
		{
			get
			{
				return this._FlightInfo1.Entity;
			}
			set
			{
				FlightInfo previousValue = this._FlightInfo1.Entity;
				if (((previousValue != value) 
							|| (this._FlightInfo1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FlightInfo1.Entity = null;
						previousValue.FlightInfo2 = null;
					}
					this._FlightInfo1.Entity = value;
					if ((value != null))
					{
						value.FlightInfo2 = this;
						this._flightInfoID = value.flightInfoID;
					}
					else
					{
						this._flightInfoID = default(int);
					}
					this.SendPropertyChanged("FlightInfo1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FlightSchedules(FlightSchedule entity)
		{
			this.SendPropertyChanging();
			entity.FlightInfo = this;
		}
		
		private void detach_FlightSchedules(FlightSchedule entity)
		{
			this.SendPropertyChanging();
			entity.FlightInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FlightSchedule")]
	public partial class FlightSchedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _scheduleID;
		
		private string _scheduleName;
		
		private string _status;
		
		private System.Nullable<int> _flightInfoID;
		
		private System.Nullable<int> _resultID;
		
		private System.Nullable<int> _userID;
		
		private System.Nullable<int> _weatherID;
		
		private System.Nullable<int> _droneID;
		
		private EntityRef<DroneInfo> _DroneInfo;
		
		private EntityRef<FlightInfo> _FlightInfo;
		
		private EntityRef<Weather> _Weather;
		
		private EntityRef<InspectionResult> _InspectionResult;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnscheduleIDChanging(int value);
    partial void OnscheduleIDChanged();
    partial void OnscheduleNameChanging(string value);
    partial void OnscheduleNameChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OnflightInfoIDChanging(System.Nullable<int> value);
    partial void OnflightInfoIDChanged();
    partial void OnresultIDChanging(System.Nullable<int> value);
    partial void OnresultIDChanged();
    partial void OnuserIDChanging(System.Nullable<int> value);
    partial void OnuserIDChanged();
    partial void OnweatherIDChanging(System.Nullable<int> value);
    partial void OnweatherIDChanged();
    partial void OndroneIDChanging(System.Nullable<int> value);
    partial void OndroneIDChanged();
    #endregion
		
		public FlightSchedule()
		{
			this._DroneInfo = default(EntityRef<DroneInfo>);
			this._FlightInfo = default(EntityRef<FlightInfo>);
			this._Weather = default(EntityRef<Weather>);
			this._InspectionResult = default(EntityRef<InspectionResult>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_scheduleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int scheduleID
		{
			get
			{
				return this._scheduleID;
			}
			set
			{
				if ((this._scheduleID != value))
				{
					this.OnscheduleIDChanging(value);
					this.SendPropertyChanging();
					this._scheduleID = value;
					this.SendPropertyChanged("scheduleID");
					this.OnscheduleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_scheduleName", DbType="VarChar(50)")]
		public string scheduleName
		{
			get
			{
				return this._scheduleName;
			}
			set
			{
				if ((this._scheduleName != value))
				{
					this.OnscheduleNameChanging(value);
					this.SendPropertyChanging();
					this._scheduleName = value;
					this.SendPropertyChanged("scheduleName");
					this.OnscheduleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(50)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flightInfoID", DbType="Int")]
		public System.Nullable<int> flightInfoID
		{
			get
			{
				return this._flightInfoID;
			}
			set
			{
				if ((this._flightInfoID != value))
				{
					if (this._FlightInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnflightInfoIDChanging(value);
					this.SendPropertyChanging();
					this._flightInfoID = value;
					this.SendPropertyChanged("flightInfoID");
					this.OnflightInfoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resultID", DbType="Int")]
		public System.Nullable<int> resultID
		{
			get
			{
				return this._resultID;
			}
			set
			{
				if ((this._resultID != value))
				{
					if (this._InspectionResult.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnresultIDChanging(value);
					this.SendPropertyChanging();
					this._resultID = value;
					this.SendPropertyChanged("resultID");
					this.OnresultIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="Int")]
		public System.Nullable<int> userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("userID");
					this.OnuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weatherID", DbType="Int")]
		public System.Nullable<int> weatherID
		{
			get
			{
				return this._weatherID;
			}
			set
			{
				if ((this._weatherID != value))
				{
					if (this._Weather.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnweatherIDChanging(value);
					this.SendPropertyChanging();
					this._weatherID = value;
					this.SendPropertyChanged("weatherID");
					this.OnweatherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_droneID", DbType="Int")]
		public System.Nullable<int> droneID
		{
			get
			{
				return this._droneID;
			}
			set
			{
				if ((this._droneID != value))
				{
					if (this._DroneInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndroneIDChanging(value);
					this.SendPropertyChanging();
					this._droneID = value;
					this.SendPropertyChanged("droneID");
					this.OndroneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DroneInfo_FlightSchedule", Storage="_DroneInfo", ThisKey="droneID", OtherKey="droneID", IsForeignKey=true)]
		public DroneInfo DroneInfo
		{
			get
			{
				return this._DroneInfo.Entity;
			}
			set
			{
				DroneInfo previousValue = this._DroneInfo.Entity;
				if (((previousValue != value) 
							|| (this._DroneInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DroneInfo.Entity = null;
						previousValue.FlightSchedules.Remove(this);
					}
					this._DroneInfo.Entity = value;
					if ((value != null))
					{
						value.FlightSchedules.Add(this);
						this._droneID = value.droneID;
					}
					else
					{
						this._droneID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DroneInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FlightInfo_FlightSchedule", Storage="_FlightInfo", ThisKey="flightInfoID", OtherKey="flightInfoID", IsForeignKey=true)]
		public FlightInfo FlightInfo
		{
			get
			{
				return this._FlightInfo.Entity;
			}
			set
			{
				FlightInfo previousValue = this._FlightInfo.Entity;
				if (((previousValue != value) 
							|| (this._FlightInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FlightInfo.Entity = null;
						previousValue.FlightSchedules.Remove(this);
					}
					this._FlightInfo.Entity = value;
					if ((value != null))
					{
						value.FlightSchedules.Add(this);
						this._flightInfoID = value.flightInfoID;
					}
					else
					{
						this._flightInfoID = default(Nullable<int>);
					}
					this.SendPropertyChanged("FlightInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Weather_FlightSchedule", Storage="_Weather", ThisKey="weatherID", OtherKey="weatherID", IsForeignKey=true)]
		public Weather Weather
		{
			get
			{
				return this._Weather.Entity;
			}
			set
			{
				Weather previousValue = this._Weather.Entity;
				if (((previousValue != value) 
							|| (this._Weather.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Weather.Entity = null;
						previousValue.FlightSchedules.Remove(this);
					}
					this._Weather.Entity = value;
					if ((value != null))
					{
						value.FlightSchedules.Add(this);
						this._weatherID = value.weatherID;
					}
					else
					{
						this._weatherID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Weather");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InspectionResult_FlightSchedule", Storage="_InspectionResult", ThisKey="resultID", OtherKey="resultID", IsForeignKey=true)]
		public InspectionResult InspectionResult
		{
			get
			{
				return this._InspectionResult.Entity;
			}
			set
			{
				InspectionResult previousValue = this._InspectionResult.Entity;
				if (((previousValue != value) 
							|| (this._InspectionResult.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InspectionResult.Entity = null;
						previousValue.FlightSchedules.Remove(this);
					}
					this._InspectionResult.Entity = value;
					if ((value != null))
					{
						value.FlightSchedules.Add(this);
						this._resultID = value.resultID;
					}
					else
					{
						this._resultID = default(Nullable<int>);
					}
					this.SendPropertyChanged("InspectionResult");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_FlightSchedule", Storage="_User", ThisKey="userID", OtherKey="userID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.FlightSchedules.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.FlightSchedules.Add(this);
						this._userID = value.userID;
					}
					else
					{
						this._userID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InspectionResult")]
	public partial class InspectionResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _resultID;
		
		private string _resultStatus;
		
		private System.Nullable<int> _reportID;
		
		private EntitySet<FlightSchedule> _FlightSchedules;
		
		private EntityRef<Report> _Report;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnresultIDChanging(int value);
    partial void OnresultIDChanged();
    partial void OnresultStatusChanging(string value);
    partial void OnresultStatusChanged();
    partial void OnreportIDChanging(System.Nullable<int> value);
    partial void OnreportIDChanged();
    #endregion
		
		public InspectionResult()
		{
			this._FlightSchedules = new EntitySet<FlightSchedule>(new Action<FlightSchedule>(this.attach_FlightSchedules), new Action<FlightSchedule>(this.detach_FlightSchedules));
			this._Report = default(EntityRef<Report>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resultID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int resultID
		{
			get
			{
				return this._resultID;
			}
			set
			{
				if ((this._resultID != value))
				{
					this.OnresultIDChanging(value);
					this.SendPropertyChanging();
					this._resultID = value;
					this.SendPropertyChanged("resultID");
					this.OnresultIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resultStatus", DbType="VarChar(50)")]
		public string resultStatus
		{
			get
			{
				return this._resultStatus;
			}
			set
			{
				if ((this._resultStatus != value))
				{
					this.OnresultStatusChanging(value);
					this.SendPropertyChanging();
					this._resultStatus = value;
					this.SendPropertyChanged("resultStatus");
					this.OnresultStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reportID", DbType="Int")]
		public System.Nullable<int> reportID
		{
			get
			{
				return this._reportID;
			}
			set
			{
				if ((this._reportID != value))
				{
					if (this._Report.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnreportIDChanging(value);
					this.SendPropertyChanging();
					this._reportID = value;
					this.SendPropertyChanged("reportID");
					this.OnreportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InspectionResult_FlightSchedule", Storage="_FlightSchedules", ThisKey="resultID", OtherKey="resultID")]
		public EntitySet<FlightSchedule> FlightSchedules
		{
			get
			{
				return this._FlightSchedules;
			}
			set
			{
				this._FlightSchedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_InspectionResult", Storage="_Report", ThisKey="reportID", OtherKey="reportID", IsForeignKey=true)]
		public Report Report
		{
			get
			{
				return this._Report.Entity;
			}
			set
			{
				Report previousValue = this._Report.Entity;
				if (((previousValue != value) 
							|| (this._Report.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Report.Entity = null;
						previousValue.InspectionResults.Remove(this);
					}
					this._Report.Entity = value;
					if ((value != null))
					{
						value.InspectionResults.Add(this);
						this._reportID = value.reportID;
					}
					else
					{
						this._reportID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Report");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FlightSchedules(FlightSchedule entity)
		{
			this.SendPropertyChanging();
			entity.InspectionResult = this;
		}
		
		private void detach_FlightSchedules(FlightSchedule entity)
		{
			this.SendPropertyChanging();
			entity.InspectionResult = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report")]
	public partial class Report : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _reportID;
		
		private string _reportName;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<System.DateTime> _time;
		
		private EntitySet<InspectionResult> _InspectionResults;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnreportIDChanging(int value);
    partial void OnreportIDChanged();
    partial void OnreportNameChanging(string value);
    partial void OnreportNameChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OntimeChanging(System.Nullable<System.DateTime> value);
    partial void OntimeChanged();
    #endregion
		
		public Report()
		{
			this._InspectionResults = new EntitySet<InspectionResult>(new Action<InspectionResult>(this.attach_InspectionResults), new Action<InspectionResult>(this.detach_InspectionResults));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reportID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int reportID
		{
			get
			{
				return this._reportID;
			}
			set
			{
				if ((this._reportID != value))
				{
					this.OnreportIDChanging(value);
					this.SendPropertyChanging();
					this._reportID = value;
					this.SendPropertyChanged("reportID");
					this.OnreportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reportName", DbType="VarChar(50)")]
		public string reportName
		{
			get
			{
				return this._reportName;
			}
			set
			{
				if ((this._reportName != value))
				{
					this.OnreportNameChanging(value);
					this.SendPropertyChanging();
					this._reportName = value;
					this.SendPropertyChanged("reportName");
					this.OnreportNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_InspectionResult", Storage="_InspectionResults", ThisKey="reportID", OtherKey="reportID")]
		public EntitySet<InspectionResult> InspectionResults
		{
			get
			{
				return this._InspectionResults;
			}
			set
			{
				this._InspectionResults.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InspectionResults(InspectionResult entity)
		{
			this.SendPropertyChanging();
			entity.Report = this;
		}
		
		private void detach_InspectionResults(InspectionResult entity)
		{
			this.SendPropertyChanging();
			entity.Report = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _userID;
		
		private string _userName;
		
		private string _userPassword;
		
		private string _userImage;
		
		private System.Nullable<int> _droneID;
		
		private EntitySet<FlightSchedule> _FlightSchedules;
		
		private EntityRef<DroneInfo> _DroneInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserIDChanging(int value);
    partial void OnuserIDChanged();
    partial void OnuserNameChanging(string value);
    partial void OnuserNameChanged();
    partial void OnuserPasswordChanging(string value);
    partial void OnuserPasswordChanged();
    partial void OnuserImageChanging(string value);
    partial void OnuserImageChanged();
    partial void OndroneIDChanging(System.Nullable<int> value);
    partial void OndroneIDChanged();
    #endregion
		
		public User()
		{
			this._FlightSchedules = new EntitySet<FlightSchedule>(new Action<FlightSchedule>(this.attach_FlightSchedules), new Action<FlightSchedule>(this.detach_FlightSchedules));
			this._DroneInfo = default(EntityRef<DroneInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this.OnuserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("userID");
					this.OnuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnuserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("userName");
					this.OnuserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userPassword", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string userPassword
		{
			get
			{
				return this._userPassword;
			}
			set
			{
				if ((this._userPassword != value))
				{
					this.OnuserPasswordChanging(value);
					this.SendPropertyChanging();
					this._userPassword = value;
					this.SendPropertyChanged("userPassword");
					this.OnuserPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userImage", DbType="VarChar(50)")]
		public string userImage
		{
			get
			{
				return this._userImage;
			}
			set
			{
				if ((this._userImage != value))
				{
					this.OnuserImageChanging(value);
					this.SendPropertyChanging();
					this._userImage = value;
					this.SendPropertyChanged("userImage");
					this.OnuserImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_droneID", DbType="Int")]
		public System.Nullable<int> droneID
		{
			get
			{
				return this._droneID;
			}
			set
			{
				if ((this._droneID != value))
				{
					if (this._DroneInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndroneIDChanging(value);
					this.SendPropertyChanging();
					this._droneID = value;
					this.SendPropertyChanged("droneID");
					this.OndroneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_FlightSchedule", Storage="_FlightSchedules", ThisKey="userID", OtherKey="userID")]
		public EntitySet<FlightSchedule> FlightSchedules
		{
			get
			{
				return this._FlightSchedules;
			}
			set
			{
				this._FlightSchedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DroneInfo_User", Storage="_DroneInfo", ThisKey="droneID", OtherKey="droneID", IsForeignKey=true)]
		public DroneInfo DroneInfo
		{
			get
			{
				return this._DroneInfo.Entity;
			}
			set
			{
				DroneInfo previousValue = this._DroneInfo.Entity;
				if (((previousValue != value) 
							|| (this._DroneInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DroneInfo.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._DroneInfo.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._droneID = value.droneID;
					}
					else
					{
						this._droneID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DroneInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FlightSchedules(FlightSchedule entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_FlightSchedules(FlightSchedule entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
}
#pragma warning restore 1591
